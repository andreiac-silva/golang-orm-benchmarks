// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package repository

import (
	"context"
)

// iteratorForCreateMany implements pgx.CopyFromSource.
type iteratorForCreateMany struct {
	rows                 []CreateManyParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateMany) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateMany) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Isbn,
		r.rows[0].Title,
		r.rows[0].Author,
		r.rows[0].Genre,
		r.rows[0].Quantity,
		r.rows[0].PublicizedAt,
	}, nil
}

func (r iteratorForCreateMany) Err() error {
	return nil
}

func (q *Queries) CreateMany(ctx context.Context, arg []CreateManyParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"books"}, []string{"isbn", "title", "author", "genre", "quantity", "publicized_at"}, &iteratorForCreateMany{rows: arg})
}
